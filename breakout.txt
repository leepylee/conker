func main()
  num x = MIDX
  num y = MIDY
  num scale = 10
  num batx1 = 0.025 * SCREENW
  num batx2 = 0.975 * SCREENW
  num baty1 = 0.05 * SCREENH
  num baty2 = 0.95 * SCREENH
  num batSize = 100
  num batThick = 10 
  num ballThick = 15
  num wallThick = SCREENH * 0.2

  num ballx = MIDX
  num bally = MIDY + MIDY / 2
  num vx = 1
  num vy = 5

  num halfThick = batThick / 2 
  num halfBat = batSize / 2
  num halfBall = ballThick / 2
end

func draw()
  style FILL
  batMove()
  ballMove()
  drawBats()
  drawBall()
end

func batMove()
  num rx = axis('AXIS_Z')
  num ry = axis('AXIS_RZ')
  if abs(rx) > 0.01
    x += rx * scale
  end
  if abs(ry) > 0.01
    y += ry * scale
  end
  if x < halfBat
    x = halfBat
  else if x > SCREENW - halfBat
    x = SCREENW - halfBat
  else if y < halfBat
    y = halfBat
  else if y > SCREENH - halfBat
    y = SCREENH - halfBat
  end
end

func ballMove()
  ballx += vx
  bally += vy
  bool onBatY = bally + halfBall >= y - halfBat and bally - halfBall <= y + halfBat
  bool onBatX = ballx + halfBall >= x - halfBat and ballx - halfBall <= x + halfBat
  if ballx > batx2 or ballx < batx1 or bally < baty1 or bally > baty2 
    lostBall()
  else if ballx + halfBall >= batx2 - halfThick and onBatY 
    vx = -vx
  else if ballx - halfBall <= batx1 + halfThick and onBatY
    vx = -vx
  end
  if bally + halfBall >= baty2 - halfThick and onBatX
    vy = -vy
  else if bally - halfBall <= baty1 + halfThick and onBatX
    vy = -vy
  end
end

func lostBall()
  ballx = MIDX
  bally = MIDY + MIDY / 2
  vx = 1
  vy = 5
end

func drawBats()
  style WHITE
  rect x - halfBat, baty1 - halfThick, x + halfBat, baty1 + halfThick
  rect x - halfBat, baty2 - halfThick, x + halfBat, baty2 + halfThick
  rect batx1 - halfThick, y - halfBat, batx1 + halfThick, y + halfBat
  rect batx2 - halfThick, y - halfBat, batx2 + halfThick, y + halfBat
end

func drawBall()
  style PINK
  circle ballx, bally, halfBall
end
